name: Microservices Pipeline

on:
  workflow_dispatch:
  #repository_dispatch:
  #  types: [app_commit]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}

    strategy:
      matrix:
        include:
          - app_name: snackbar
            repository_full_name: fiap-9soat-snackbar/snackbar
          #- app_name: snackbar-management
          #  repository_full_name: fiap-9soat-snackbar/snackbar-management
          - app_name: snackbar-production
            repository_full_name: fiap-9soat-snackbar/snackbar-production

    steps:
      - name: Checkout App Repo
        uses: actions/checkout@v3
        with:
          repository:  ${{ matrix.repository_full_name }}
          token: ${{ secrets.GH_TOKEN}}
          ref: ${{ github.event.client_payload.branch == 'main' || github.event_name == 'workflow_dispatch' && 'main' || 'homolog' }}

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Run unit tests
        run: mvn -f backend/pom.xml test --no-transfer-progress

  code-analysis:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}

    strategy:
      matrix:
        include:
          - app_name: snackbar
            repository_full_name: fiap-9soat-snackbar/snackbar
          #- app_name: snackbar-management
          #  repository_full_name: fiap-9soat-snackbar/snackbar-management
          - app_name: snackbar-production
            repository_full_name: fiap-9soat-snackbar/snackbar-production

    steps:
    - name: Checkout App Repo
      uses: actions/checkout@v3
      with:
        repository:  ${{ matrix.repository_full_name }}
        token: ${{ secrets.GH_TOKEN}}
        ref: ${{ github.event.client_payload.branch == 'main' || github.event_name == 'workflow_dispatch' && 'main' || 'homolog' }}

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    - name: Build, Test and Analyze with SonarCloud
      run: |
        mvn -f backend/pom.xml clean verify \
          org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.1.2184:sonar \
          -Dsonar.projectKey=fiap-9soat-snackbar_${{ matrix.app_name }} \
          -Dsonar.organization=fiap-9soat-snackbar \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dcoverage.minimum=0.00 \

  build-and-push:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}
    env:
      MONGODB_USER: ${{ secrets.MONGODB_USER }}
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      DB_HOST: ${{ secrets.MONGO_HOST }}
      APP_DB: ${{ secrets.MONGO_APP_DB }}
      JWT_EXPIRES: ${{ secrets.JWT_EXPIRES }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
    needs: [unit-tests, code-analysis]

    strategy:
      matrix:
        include:
          - app_name: snackbar
            repository_full_name: fiap-9soat-snackbar/snackbar
          #- app_name: snackbar-management
          #  repository_full_name: fiap-9soat-snackbar/snackbar-management
          - app_name: snackbar-production
            repository_full_name: fiap-9soat-snackbar/snackbar-production

    steps:
    - name: Checkout App Repo
      uses: actions/checkout@v3
      with:
        repository:  ${{ matrix.repository_full_name }}
        token: ${{ secrets.GH_TOKEN}}
        ref: ${{ github.event.client_payload.branch == 'main' || github.event_name == 'workflow_dispatch' && 'main' || 'homolog' }}


    - name: Set Docker image tag based on branch
      run: |
          echo "APP_NAME=${{ matrix.app_name }}" >> $GITHUB_ENV
          if [[ "${{ github.event.client_payload.branch }}" == "main" || "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=homolog" >> $GITHUB_ENV
          fi

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Snackbar Docker image
      run: |
        set -x
        cd backend
        docker buildx build --platform linux/amd64,linux/arm64 \
           -t ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }} \
           --push .
        
    - name: Docker logout
      run: docker logout

  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION}}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
    needs: [build-and-push]

    strategy:
      matrix:
        include:
          - app_name: snackbar
            repository_full_name: fiap-9soat-snackbar/snackbar
          #- app_name: snackbar-management
          #  repository_full_name: fiap-9soat-snackbar/snackbar-management
          - app_name: snackbar-production
            repository_full_name: fiap-9soat-snackbar/snackbar-production


    steps:
      - name: Checkout App Repo
        uses: actions/checkout@v3
        with:
          repository:  ${{ matrix.repository_full_name }}
          token: ${{ secrets.GH_TOKEN}}
          ref: ${{ github.event.client_payload.branch == 'main' || github.event_name == 'workflow_dispatch' && 'main' || 'homolog' }}

      - name: Install Helm
        run: |
              curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  
      - name: Configure kubectl for EKS
        run: aws eks update-kubeconfig --name snackbar-mithrandir --region ${{ vars.AWS_DEFAULT_REGION}}

      - name: Set Helm variables
        run: |
              echo "APP_NAME=${{ matrix.app_name }}" >> $GITHUB_ENV
              if [[ "${{ github.event.client_payload.branch }}" == "main" || "${{ github.event_name }}" == "workflow_dispatch" ]]; then
                echo "IMAGE_TAG=latest" >> $GITHUB_ENV
                echo "DEPLOY_NAME=${{ matrix.app_name }}-prod" >> $GITHUB_ENV
                echo "APP_NAMESPACE=prod" >> $GITHUB_ENV
              else
                echo "IMAGE_TAG=homolog" >> $GITHUB_ENV
                echo "DEPLOY_NAME=${{ matrix.app_name }}-homolog" >> $GITHUB_ENV
                echo "APP_NAMESPACE=homolog" >> $GITHUB_ENV
              fi
  
      - name: Helm Upgrade/Install
        run: |
              helm plugin install https://github.com/hypnoglow/helm-s3.git
              helm repo add snackbar-charts s3://${{ secrets.BUCKET_S3 }}
    
              helm upgrade --install ${{ env.DEPLOY_NAME }} snackbar-charts/snackbar-app \
                --namespace ${{ env.APP_NAMESPACE }} \
                --create-namespace \
                --set IMAGE.REPOSITORY=171219910203199431032017/${{ matrix.app_name }} \
                --set IMAGE.TAG=${{ env.IMAGE_TAG }} \
                --set SECRET.DATABASE.MONGODB_USER=${{ secrets.MONGODB_USER }} \
                --set SECRET.DATABASE.MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }} \
                --set SECRET.DATABASE.DB_HOST=${{ vars.MONGO_HOST }} \
                --set SECRET.DATABASE.APP_DB=${{ matrix.app_name }} \
                --set SECRET.JWT.EXPIRES=${{ secrets.JWT_EXPIRES }} \
                --set SECRET.JWT.SECRET=${{ secrets.JWT_SECRET }} \
                --set SECRET.ORDER_SERVICE_URL=${{ secrets.ORDER_SERVICE_URL }} \