name: Teste Microservices Pipeline

on:
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest


    strategy:
      matrix:
        include:
          - app_name: snackbar
            repository_full_name: fiap-9soat-snackbar/snackbar
          - app_name: snackbar-teste
            repository_full_name: fiap-9soat-snackbar/snackbar-teste
          - app_name: snackbar-novo-teste
            repository_full_name: fiap-9soat-snackbar/snackbar-novo-teste


    #strategy:
    #  matrix:
    #    include:
    #      - app_name: snackbar-production
    #        repository_full_name: fiap-9soat-snackbar/snackbar-production
    #      - app_name: snackbar-payment
    #        repository_full_name: fiap-9soat-snackbar/snackbar-payment
    #      - app_name: snackbar-order
    #        repository_full_name: fiap-9soat-snackbar/snackbar-order
    #      - app_name: snackbar-management
    #        repository_full_name: fiap-9soat-snackbar/snackbar-management


    env:
      MONGODB_USER: ${{ secrets.MONGODB_USER }}
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      DB_HOST: ${{ secrets.MONGO_HOST }}
      APP_DB: ${{ secrets.MONGO_APP_DB }}
      JWT_EXPIRES: ${{ secrets.JWT_EXPIRES }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - name: Checkout App Repo
        uses: actions/checkout@v3
        with:
          repository: ${{ matrix.repository_full_name }}
          token: ${{ secrets.GH_TOKEN }}
          ref: main


      - name: Set Docker image tag based on branch
        run: |
          echo "APP_NAME=${{ matrix.app_name }}" >> $GITHUB_ENV
          echo "IMAGE_TAG=latest" >> $GITHUB_ENV

     # - name: Set Docker image tag based on branch
     #   run: |
     #     echo "APP_NAME=${{ matrix.app_name }}" >> $GITHUB_ENV
     #     if [[ "${{ matrix.branch }}" == "main" ]]; then
     #       echo "IMAGE_TAG=latest" >> $GITHUB_ENV
     #     else
     #       echo "IMAGE_TAG=homolog" >> $GITHUB_ENV
     #     fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Snackbar Docker image
        run: |
          set -x
          cd backend
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }} \
            --push .

      - name: Docker logout
        run: docker logout
